import sys
import textwrap

from mirror_tool.cmd import entrypoint


def test_generate_yaml_noop(tmpdir, monkeypatch, capsys):
    """gitlab-ci-yml should output nothing if gitlab is not enabled."""
    monkeypatch.setattr(sys, "argv", ["", "gitlab-ci-yml"])
    monkeypatch.chdir(str(tmpdir))
    tmpdir.join(".mirror-tool.yaml").write("mirror: []\n")
    entrypoint()
    (out, err) = capsys.readouterr()
    assert err == ""
    assert out == ""


def test_generate_yaml(tmpdir, monkeypatch, capsys):
    """gitlab-ci-yml should output expected content in typical scenario."""
    monkeypatch.setattr(sys, "argv", ["", "gitlab-ci-yml"])
    monkeypatch.chdir(str(tmpdir))
    tmpdir.join(".mirror-tool.yaml").write(
        "mirror: []\ngitlab_merge: {enabled: true, dest: 'qa'}\n"
    )
    entrypoint()
    (out, err) = capsys.readouterr()
    assert err == ""
    assert (
        out.strip()
        == textwrap.dedent(
            """
        # This config was generated by 'mirror-tool gitlab-ci-yml'.
        # Use 'include' to load it from your main .gitlab-ci.yml.
        .mirror-tool-image:
          image:
            name: quay.io/rmcgover/mirror-tool:latest
            entrypoint: [""]
          tags: [docker]

        .mirror-tool-deploy:
          extends: .mirror-tool-image
          stage: deploy
          resource_group: mirror-tool

        "mirror-tool: validate config":
          extends: .mirror-tool-image
          script: mirror-tool validate-config
          rules:
          - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
          - if: '$CI_PIPELINE_SOURCE == "push"'

        "mirror-tool: update":
          extends: .mirror-tool-deploy
          script: mirror-tool update
          rules:
          - if: '$GITLAB_MIRROR_TOKEN && $MANUAL_UPDATE == "1" && $CI_PIPELINE_SOURCE == "web" && $CI_COMMIT_BRANCH == "qa"'
          - if: '$GITLAB_MIRROR_TOKEN && $CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == "qa"'
        """
        ).strip()
    )
